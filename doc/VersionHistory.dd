Ddoc

$(H2 2025-03-14 Version 1.4.0)
 $(UL
  $(LI fixed msbuild integration for VS 2022 17.5 - 17.14)
  $(LI now works with Visual Studio for Windows on ARM64)
  $(LI dmdserver:
   $(UL
    $(LI updated to frontend of DMD 2.110.0)
    $(LI now slightly less dependent on D runtime by avoiding lowerings)
    $(LI fixed some false pointers causing memory leaks)
    $(LI pass import paths from prerequisite projects to semantic analysis, too)
    $(LI log communication with Visual D to %TEMP%/dmdserver if that folder exists)
    $(LI improve completion for member variables, code in switch statement)
    $(LI fixed completion for fields/members of class/struct fields)
    $(LI added option to display type size and alignment in tool tip)
  ))
  $(LI mago debugger extension:
   $(UL
    $(LI fix crash due to changed return values from IDiaSession in VS2022, probably fixes issue #261)
    $(LI fixed issue #282: now (mostly) calls __debug* methods asynchronously)
    $(LI fixed issue #279: display void[] as ubyte[] in the debugger)
    $(LI fixed issue #281: dereference pointer with '.' for arrays, too)
    $(LI fixed switching GC for funtion evaluation and adapted it to dmd 2.109)
    $(LI fixed display of tuples (currently only with LDC))
    $(LI do not hide __param_.. function arguments as compiler generated symbols)
    $(LI fixed showing intellisense information in tool tip while debugging in VS2022)
    $(LI expression evaluator now resolves identifiers of named enumerator types)
  ))
  $(LI language service:
   $(UL
    $(LI fixed issue 23734: avoid exception by std.file.isDir when clicking a project folder that doesn't exist)
    $(LI updated dfmt library from upstream)
    $(LI improved message when dmd crashes)
    $(LI "add imports from dependent projects" is now evaluated recursively and passed to semantic analysis)
    $(LI added support for compiler option -preview=shortenedMethods)
    $(LI fixed issue #264: VisualD doesn't run compiled executable, when I select "Compile and Run" option)
    $(LI fixed issue #269: avoid BOM in response file if system codepage is UTF-8)
    $(LI fixed detecting dmd update after 2.108)
    $(LI updated to build with dmd-2.110)
    $(LI fixed crash if source window closed before semantic analysis callback completed)
    $(LI fixed building with VS 2022)
  ))
  $(LI installer:
   $(UL
    $(LI full installer now bundled with DMD 2.110.0 and LDC 1.40.0)
    $(LI installer now supports 4 parallel installations of VS 2022)
    $(LI project template cache now removed if Visual D does not find itself in it. Workaround for issue #256)
    $(LI fixed some version inaccuracies in installation files)
  ))
 )

$(H2 2022-09-10 Version 1.3.1)
 $(UL
  $(LI full installer now bundled with DMD 2.100.2 and LDC 1.30.0)
  $(LI dmdserver: fixed memory leak)
  $(LI fixed building against WinSDK 10.0.22621.0)
  $(LI fixed projects no longer considered failing)
  $(LI D files in VC projects failed to build in VS 2022 17.3 and 17.4, added separate versions of
    dbuild.17.x.dll linked against respective versions of Microsoft.Build.CPPTasks.Common.dll)
 )

$(H2 2022-06-05 Version 1.3.0)
 $(UL
  $(LI dmdserver updated to frontend of DMD 2.100.0)
  $(LI full installer now bundled with DMD 2.100.0 and LDC 1.29.0)
  $(LI bugzilla 22747: D files in VC projects failed to build in VS 2022, added separate versions of
       Microsoft.Build.CPPTasks.Common for 17.0, 17.1 and 17.2.)
  $(LI bugzilla 22764: now searches the 32-bit registry hive for install paths of DMD and LDC)
  $(LI bugzilla 23069: mago crashing when debugging VARIANT data type in VS 2022)
  $(LI bugzilla 23043: project templates missing in VS 2022 until configuration manually updated)
  $(LI semantic analysis: without a project loaded, a D file is now analyzed using the compile options
       of "Compile and Run" with an import path derived from the module declaration.)
  $(LI visualdproj: exit code printed for failed commands)
  $(LI cv2pdb 0.52: improved DWARF support for non-contiguous functions, bug fixes)
 )

$(H2 2022-01-15 Version 1.2.0)
 $(UL
  $(LI added support for VS 2022)
  $(LI dmdserver:
   $(UL
    $(LI updated to frontend of DMD 2.098.1)
    $(LI bugzilla 21710: Code Completion doesn't work if compiler path contains a white space)
    $(LI restrict "errors in imported modules" to a couple of lines)
    $(LI added option to restart the semantic analysis if memory usage goes above a given threshold)
  ))
  $(LI project management:
   $(UL
    $(LI bugzilla 21897: Semicolon inside quotes in path variable causes range violation in pipedmd)
    $(LI avoid rebuild when target is also read by compiler (dmd 2.098+))
  ))
  $(LI editor:
   $(UL
    $(LI bugzilla 21877: VS2019 crash with "Show parameter storage class at call site")
  ))
  $(LI cv2pdb:
   $(UL
    $(LI added support for DWARF5)
  ))
  $(LI installer:
   $(UL
    $(LI full installer now bundled with DMD 2.098.1 and LDC 1.28.1)
  ))
 )

$(H2 2021-04-28 Version 1.1.1)
 $(UL
  $(LI dmdserver:
   $(UL
    $(LI updated to frontend of DMD 2.096.1)
  ))
  $(LI debugger:
   $(UL
    $(LI bugzilla 21734: stack overflow when displaying recursive structure with array)
  ))
  $(LI installer:
   $(UL
    $(LI full installer now bundled with DMD 2.096.1 and LDC 1.25.1)
  ))
 )

$(H2 2021-02-02 Version 1.1.0)
 $(UL
  $(LI dmdserver:
   $(UL
    $(LI updated to frontend of DMD 2.095.1)
    $(LI experimental: show parameter storage ref/out/lazy at call site)
    $(LI improved handling of symbols in selective imports)
  ))
  $(LI editor:
   $(UL
    $(LI bugzilla 21239: navigation bar now sorted, symbols starting with "__" moved to the bottom)
    $(LI integrated dfmt for "Format Document")
  ))
  $(LI installer:
   $(UL
    $(LI full installer now bundled with DMD 2.095.1 and LDC 1.25.0)
  ))
  $(LI projects:
   $(UL
    $(LI added support for -preview=in and -preview=inclusiveincontracts)
    $(LI visualdproj: added macros FULLOUTDIR, FULLINTDIR, INPUTFULLPATH, INPUTFULLDIR, TARGETFULLPATH
      and TARGETFULLDIR for guaranteed absolute paths)
  ))
 )

$(H2 2020-08-23 Version 1.0.1)
 $(UL
  $(LI dmd based semantic engine:
   $(UL
    $(LI updated to DMD 2.093.1)
    $(LI fixed showing documentation for template functions)
  ))
  $(LI editor: now extra mouse buttons to navigate backward/forward supported)
  $(LI project management:
   $(UL
    $(LI bugzilla 21024: VS2017/2019 new project: fixed unrelated files listed in New Project Dialog)
    $(LI bugzilla 21028: project templates not visible when VS started as standard/restricted user)
  ))
  $(LI mago debugger expression evaluator: fixed wrong values displayed eventually when switching stack frames)
  $(LI installer: full installer now bundled with DMD 2.093.1 and LDC 1.23.0)
 )

$(H2 2020-07-04 Version 1.0.0)
 $(UL
  $(LI project management:
   $(UL
    $(LI trailing \ now removed from $(WindowsSDKVersion)/$(UCRTVersion) for more consistency between
      autodetected version and as read from the environment)
    $(LI added global option "Echo batch commands executed" to show commands during builds)
    $(LI workaround /noopttls no longer added when building with LDC or dmd 2.076+)
  ))
  $(LI dmdserver:
   $(UL
    $(LI now enabled by default including semantic highlighting)
    $(LI updated to dmd 2.092)
    $(LI fix parameters not considered references to itself)
    $(LI fix crash when invoking "Find All References")
    $(LI fixed passing default versions to file not in any project)
    $(LI now built with LDC)
    $(LI improve preciseness for the GC)
  ))
  $(LI editor with dmdserver:
   $(UL
    $(LI implement "goto definition" by clicking identifier in tool tip)
    $(LI add navigation bar)
    $(LI fixed "Find in Solution" no longer working in VS 2019 16.6)
  ))
  $(LI mago debugger
   $(UL
    $(LI can now evaluate class/struct methods/fields __debugOverview, __debugExpanded, __debugTextView
      to customize display in the debugger)
    $(LI experimental: can now display ranges similar to arrays)
    $(LI some performance improvements by caching some data while the debuggee is stopped)
  ))
  $(LI installer:
   $(UL
    $(LI full installer now bundled with dmd 2.092.1 and LDC 1.22.0)
  ))
 )

$(H2 2020-03-23 Version 0.52.0)
 $(UL
  $(LI editor:
   $(UL
    $(LI restart semantic analysis if project settings change)
    $(LI while showing completions typing more characters no longer restarts analysis, but
      just filters existing results)
    $(LI fix parameter info tooltip for functions with function attributes)
  ))
  $(LI VS 2019 16.1+: the new project dialog now allows filtering by language tag "D")
  $(LI avoid crash due to unhandled exception if checking for updates fails)
  $(LI refresh Update page after upgrading)
  $(LI mago debugger:
   $(UL
    $(LI lookup symbols as the remainder of globals and present them expandable if ambiguous)
    $(LI add option to show length of dynamic array in type column)
    $(LI add support for Tuples: recombine fields `__<var>_field_%d` to an expandable structure)
    $(LI fixed displaying dynamic type of C++ classes for x86)
  ))
  $(LI cv2pdb:
   $(UL
    $(LI fixed debug info conversion error when dchar is used with dmd 2.089+)
  ))
  $(LI dmdserver:
   $(UL
    $(LI rebased to dmd 2.091.0-beta1)
    $(LI all language options are now passed to the engine)
    $(LI fixed a couple of crashes (often result in eternally reporting "Analyzing..."))
    $(LI terminate on fatal assertions and let Visual D restart the server)
    $(LI improvements for code-completions)
    $(LI bugzilla 20660: goto definition on import module doesn't work)
  ))
  $(LI dparser:
   $(UL
    $(LI added parser support for is(symbol == module/package))
  ))
  $(LI projects:
   $(UL
    $(LI added support for -preview=dip1021)
    $(LI added support for -preview=rvaluerefparam)
    $(LI added support for -preview=nosharedaccess)
    $(LI added support for -HCf (C++ header generation, only vcxproj))
    $(LI LDC with vcxproj: some language options were inaccessible)
    $(LI removed legacy support for -property)
    $(LI vcxproj: add dbuild.props showing how to setup a project that builds D files without Visual D installed)
    $(LI vcxproj: do not check referenced projects if the project itself already needs phobos to be linked)
    $(LI vcxproj: only print the filename in the "Compiling" message, not the path)
  ))
 )

$(H2 2020-01-18 Version 0.51.0)
 $(UL
  $(LI installer:
   $(UL
    $(LI add sections for "Build Tools VS2017/2019")
    $(LI support more legacy Windows SDKs)
  ))
  $(LI editor:
   $(UL
    $(LI Ctrl+Click goto definition added for VS2017+)
    $(LI VS2017+: syntax highlighted tool tips)
    $(LI added tooltip to collapsed region)
    $(LI added option to not show error squiggles and markers)
    $(LI fix function signature tool tips)
    $(LI synchronize known version identifiers with dmd 2.090)
  ))
  $(LI semantic server
   $(UL
    $(LI experimental: semantic server built from DMD frontend)
    $(LI now creates server process per Visual Studio instance)
    $(LI improve recovery after semantic server is restarted)
    $(LI error list now filled with intellisense errors)
  ))
  $(LI projects:
   $(UL
    $(LI visualdproj basic DUB support: upgrade and refresh if project contains dub.json or dub.sdl)
    $(LI msbuild: pass original variable LinkToolExe to pipelink.exe through environment)
    $(LI msbuild: fixed dependency project being marked as "unsuccessfully built" when detecting
      D library requirements)
    $(LI removed support for -gc (no longer supported since dmd 2.083))
  ))
  $(LI mago:
   $(UL
    $(LI new option "hide reference pointers")
    $(LI new option: "remove leading zeroes from hex values")
    $(LI fix crash expanding pointer to empty dynamic array)
    $(LI large arrays: show growing index, fix omitting last element)
    $(LI improve AA version detection, adapt to modified hash function)
    $(LI VS2019 16.4: fix "Error" shown in tooltip for array elements beyond the actual size)
  ))
 )

$(H2 2019-09-03 Version 0.50.1)
 $(UL
  $(LI installer:
   $(UL
    $(LI msbuild: fix building right after full installation)
    $(LI bugzilla 20004: add button to reset all global settings to their default)
    $(LI bugzilla 20005: try to detect VC through ISetupConfiguration, too)
  ))
  $(LI VC project:
   $(UL
    $(LI bugzilla 20003: project properties: show "Better C" in option text)
    $(LI release configurations in new projects now default to -release -O -inline)
    $(LI Compile and Compile/Run/Debug/Disassemble didn't use all command line options,
         Run/Debug now use "dmd -i" instead of "rdmd")
    $(LI fix parallel build in VS 2019 16.1)
    $(LI VS 2019 16.2: fix command line options no longer read correctly from the VC project for
         Compile and Run/Debug/Disassemble)
  ))
  $(LI editor:
   $(UL
    $(LI version highlighting for source files not in a project now reads settings from startup project)
    $(LI highlight x64 registers in asm block)
    $(LI don't highlight asm keywords/mnemonics/registers from semantic information)
  ))
  $(LI mago:
   $(UL
    $(LI improve function call in watch window
     $(UL
      $(LI implement virtual functions, fix calling delegates and function pointers)
      $(LI display of delegate type)
      $(LI support arbitrary return types)
    ))
    $(LI fix showing UTF32 values (supported by dmd 2.089))
    $(LI fix reading enum values (not emitted before dmd 2.089))
  ))
 )

$(H2 2019-06-23 Version 0.50.0)
 $(UL
  $(LI installer:
   $(UL
    $(LI now another installer available that includes DMD and LDC)
    $(LI installer no longer asks for DMD path when updating existing installation)
    $(LI check for updates for Visual D, DMD and LDC, assisted download and install)
    $(LI check and report invalid non-empty DMD/LDC installation folders)
    $(LI VC project: D-Compiler option missing if no english VS language pack installed)
   ))
  $(LI VC project:
   $(UL
    $(LI new projects now determine Windows SDK automatically)
    $(LI DMD: fix wrong selections for bounds check options)
    $(LI LDC: added -mixin option)
    $(LI added enable -mixin option to autogenerate files according to the compilation model)
    $(LI "New item" now also allows adding D module)
    $(LI new option for -extern-std=c++xx)
    $(LI new option for -lowmem)
   ))
  $(LI visualdproj:
   $(UL
    $(LI VS 16.1 Preview 2: ignore tracked files in *.delete.*.tlog as dependencies, too)
    $(LI Error List: classify warnings and deprecations according to the respective options)
    $(LI don't pass -mixin= to the link step)
    $(LI bugzilla 19930: visualdproj: fix building projects with "&|<>" in directory names)
   ))
  $(LI dparser:
   $(UL
    $(LI add semantic coloring for module and package names)
    $(LI experimental highlight references to the same symbol as the one at the caret)
   ))
  $(LI mago:
   $(UL
    $(LI fixed width of hex display of negative values)
    $(LI dynamic type not shown for types that have no members (including interfaces))
    $(LI dynamic type now displayed with the declared type (in braces))
    $(LI determine dynamic type of C++ classes)
    $(LI demangle D symbol names)
    $(LI regression: use of registers in expression was lost at some point)
    $(LI show class and message for exceptions that the debugger breaks on)
    $(LI fix conditional breakpoints "not supported")
    $(LI support multiple "live ranges" when LDC uses registers for locals)
    $(LI fix evaluating locals in registers)
   ))
  $(LI slightly change identification of break point locations)
  $(LI fixed "go to definition" eventually not jumping to correct line after opening document)
  $(LI scale dialogs according to current text font size, i.e. adapt to DPI scaling)
 )

$(H2 2019-04-28 Version 0.49.2)
 $(UL
  $(LI VS2013/VS2015: VC projects broken in 0.49.1 due to unsupported msbuild variable)
  $(LI visualdproj: fixed additional options not passed to single file compilation)
  $(LI VS2015: workaround VS not correctly updating extension caches after uninstallation)
  $(LI bugzilla 19826: visualdproj projects created for LDC still use DMD)
 )

$(H2 2019-04-21 Version 0.49.1)
 $(UL
  $(LI fixed reading settings from VC projects in VS2017)
  $(LI fixed determining versions from dmd versions no longer supporting -gc)
  $(LI fixed reading import path from newer LDC versions)
  $(LI added support for VS2019 Update 16.1)
  $(LI dparser:
   $(UL
    $(LI jump to original definition if it is not renamed or the caret is on the import)
    $(LI fixed import lookup if module name is also a package)
    $(LI fixed stack overflows with static foreach)
    $(LI fixed infinite loop for cyclic base classes)
    $(LI fixed more crashes during semantic highlighting)
  ))
 )

$(H2 2019-04-07 Version 0.49.0)
 $(UL
  $(LI installation
   $(UL
    $(LI prepare for VS2019: detect installation, build against VS 2019 SDK, Win SDK 10.0.17763.0)
    $(LI bugzilla 19690: installer fails to register MSBuild extensions for Visual Studio Build Tools)
  ))
  $(LI build system
   $(UL
    $(LI now parallel compilation supported by VC projects (thanks to Igor Cesi))
    $(LI add support for recently added command line options -mixin)
    $(LI new "Language" configuration page for -betterC, -dipNN and -transition=/-preview=/-revert= options)
    $(LI visualdproj: remove support for D1 and ancient/removed options -nofloat and -property)
    $(LI visualdproj: replaced -noboundscheck option with -boundscheck=...)
    $(LI bugzilla 19558: save all files with compile and run/debug/disassemble)
    $(LI fix reading options from vcxproj with compile and run/debug/disassemble)
    $(LI bugzilla 19726: VC project using LDC now adds C runtime to linker dependencies)
  ))
  $(LI dparser
   $(UL
    $(LI catch up with recent language changes:
     $(UL
      $(LI contract expressions)
      $(LI traits can appear everywhere a type can be declared)
      $(LI allow @UDA for enumerator values)
     ))
    $(LI parse __vector and __parameters in IsExpression, evaluate __vector)
    $(LI fix parsing character literals with surrogate pairs)
    $(LI fix tooltips showing storage classes as type constructors)
    $(LI fixed crash with "static foreach")
  ))
  $(LI debugger
   $(UL
    $(LI bugzilla 18889: do not forward tooltip to debugger if hovering compile time identifier (type/enum))
  ))
  $(LI editor
   $(UL
    $(LI tweaked default colors to better work with dark mode (restart VS and Visual D twice after switch
      between light and dark modes))
  ))
 )

$(H2 2018-12-22 Version 0.48.1)
 $(UL
  $(LI dparser:
   $(UL
    $(LI fix Issue 19411: increase stack size for DParserCOMServer)
    $(LI goto definition on alias: jump to base definition if caret on alias)
  ))
  $(LI build system
   $(UL
    $(LI fix Issue 19445: Linking to lib under "c:\Program Files (x86)" does not work in Visual D)
  ))
  $(LI dustmite
   $(UL
    $(LI fix copying project for dustmite with relative paths)
    $(LI move command line options to new setup page, add dustmite command line options)
  ))
  $(LI cv2pdb
   $(UL
    $(LI fix crash if mspdb*.dll cannot be loaded from path)
    $(LI emit "elemtype[keytype]" instead of "dAssocArray")
    $(LI fix missing line numbers for new versions of mspdb*.dll (e.g. 14.16.27012/VS 15.9))
  ))
  $(LI mago
   $(UL
     $(LI variables captured from stack of outer function not displayed in locals)
  ))
 )


$(H2 2018-12-02 Version 0.48.0)
 $(UL
  $(LI installation
   $(UL
    $(LI installer and binaries now digitally signed by the "D Language Foundation")
    $(LI fixed uninstallation for VS2017)
    $(LI installation for VS2013+ now uses PackageManifest format instead of Vsix)
    $(LI VS2017: loading the Visual D package could crash with some VS installation "ids"")
    $(LI avoid initial error message regarding altered assemblies with same version)
    $(LI fix installation of the D icon for the solution explorer in VS2017)
    $(LI installer hides options for VS2005-VS2012 if not installed)
    $(LI remove old extension folders before installation)
  ))
  $(LI new project wizard
   $(UL
    $(LI restore project templates for VS2008, new project wizard doesn't work there')
    $(LI mixed D/C++ VC project: optionally adding main in C++, setup precompiled headers)
    $(LI new VCProject: now uses $(LatestTargetPlatformVersion) as WindowsTargetPlatformVersion to
      avoid defaulting to Windows SDK 8.1)
  ))
  $(LI settings
   $(UL
    $(LI fix default library path if UCRT has different version than SDK)
    $(LI VS2017: D compiler installation paths and "demangle link errors" are now saved
	  to "HKCR\Softwre\Visual D" to be picked up by msbuild)
    $(LI show detected compiler version below installation path)
    $(LI removed option "parse source for syntax errors", now always on)
    $(LI removed option "expansions from text buffer", now always off)
    $(LI removed option "use semantic analysis for goto definition", now always on)
    $(LI removed option "override linker settings from sc.ini", always on as linker no 
      longer set in sc.ini since dmd 2.079)
    $(LI removed option "additional linker options", it was invisible anyway)
    $(LI rearrange settings to better show their scope)
  ))
  $(LI build system
   $(UL
    $(LI fixed linking privatephobos.lib if intermediate dir different from output dir)
  ))
  $(LI dparser
   $(UL
    $(LI semantic analysis did not work if "parse source for syntax errors" was disabled)
    $(LI no semantic info for a package if any file in the package has fatal parser error)
    $(LI now has semantic support for static foreach (thanks to Alexander Bothe))
    $(LI fixed "Find references")
    $(LI added experimental option to show value of constants in tooltip)
    $(LI the last user specified version was prepended to "Windows")
    $(LI predefined versions now evaluated by compiler invocation)
    $(LI experimental: option to enable semantic identifier highlighting)
    $(LI 'virtual' no longer considered a keyword)
    $(LI updated list of traits for completion)
    $(LI fix crash with dub generated project)
    $(LI add 'typeof' to completion where 'typeid' is valid, too)
  ))
  $(LI mago
   $(UL
    $(LI added option to show base class fields as direct fields)
    $(LI allow suffix 'h' for hex numbers for better interoperablility with VS disassembly)
    $(LI concord: can now show return values of functions stepped over (not slices or delegates 
      on x64 or small non-POD-structs))
    $(LI concord: fix crash when showing children in data tooltip (mostly occured in VS2017))
    $(LI concord: allow dragging addresses to the disassembly window)
    $(LI engine: Fix the way the debugger steps over instructions with REP prefix.)
    $(LI engine: the disassemble view now supports SSE4 and AVX)
    $(LI detect AA if type ends with "]", but not with "[]")
    $(LI fix crash in VS if a value is marked expandable, but doesn't yield any children)
    $(LI fix .ptr property of static array if it is a struct/class member)
    $(LI add option to disable strings to be expandable)
    $(LI support showing closure and capture variables as locals for dmd 2.084)
  ))
  $(LI cv2pdb
   $(UL
    $(LI can now detect VS2017 via Setup-COM-API)
    $(LI some DWARF fixes)
  ))
  $(LI editor
   $(UL
    $(LI when pasting code to D source file newlines are adapted to surrounding code)
    $(LI added outlining for case statements)
    $(LI implemented commands View.PopBrowseContext and View.ForwardBrowseContext)
    $(LI reindent if multiple lines added by completion)
    $(LI tweaked formatting for enumerators, struct and array initializers)
    $(LI added option to not indent case statements)
  ))
  $(LI fixed "Compile and Run" on selection)
  $(LI fix help via F1 for dmd 2.072+)
 )

$(H2 2018-06-24 Version 0.47.0)
 $(UL
  $(LI build system
   $(UL
    $(LI msbuild:
     $(UL
      $(LI improved dependency handling for single/package file compilation (thanks to Igor Cesi))
      $(LI LDC now assumed to be multilib installation, i.e. 64-bit lib folder is "lib64", not "lib")
      $(LI Issue 18641: phobos/druntime libraries automatically added to link if any D file
        is compiled in the project or a dependent static library (without -betterC))
      $(LI Issue 18640: settings now default to mago debug engine (avoiding deprecation warning))
      $(LI to use LDC within VS2017, set "InstallationFolder" in registry HKEY_LOCAL_MACHINE\Software\LDC)
      $(LI now demangles linker errors (if not disabled on global options page))
    ))
    $(LI new project wizard for customizing generated projects, with only two types to select from)
    $(LI new icons for project templates based on vcxproj)
    $(LI support option -gf (emit debug information for referenced types))
  ))
  $(LI mago:
   $(UL
    $(LI hex values now lower case for consistency with C++ debugger)
    $(LI no longer shows void pointers as expandable)
    $(LI show vtable of classes and interfaces as __vfptr (also allowed in watches, enable/disable
      on Tools->Options->Debugging-Mago page, not with LDC))
    $(LI shows symbol names for pointers if found in image)
    $(LI pointers: also show value for pointee, remove additional indirection for complex types)
    $(LI support to call functions and delegates without arguments from watch window
      (dmd win64 only, no slice or delegate return values))
    $(LI can now show the dynamic type of an interface)
  ))
  $(LI cv2pdb:
   $(UL
    $(LI DWARF: several bug fixes and minor enhancements)
    $(LI can now convert DBG files alongside exe/dll)
  ))
  $(LI miscellaneous
   $(UL
    $(LI dparser: support 'do' instead of 'body')
    $(LI Issue 18622: removed outdated information regarding link definition when generated by Visual D DLL project.)
  ))
 )

$(H2 2017-12-02 Version 0.46.0)
 $(UL
  $(LI installation
   $(UL
    $(LI fix detection of Windows 10 SDK, also define $(DOLLAR)(WindowsSdkVersion))
    $(LI VS2017: fixed registration of exception settings)
  ))
  $(LI build system
   $(UL
    $(LI add workaround for broken TLS when linking with link.exe from VS2017 update 15.3.1)
    $(LI build single object file to intermediate directory rather than output folder)
    $(LI intermediate executable for cv2pdb now written to intermediate directory)
    $(LI custom build batch files now written to intermediate directory)
    $(LI use "if %errorlevel% neq 0" instead of "if errorlevel 1" in batches to capture crashes, too)
    $(LI fix default executable search path for LDC assuming a 64-bit compiler executable (avoids
      linker error -1073741701))
    $(LI added *.tlog to default files to clean)
    $(LI add import library to project outputs if "create import library" enabled)
    $(LI added linker options to configure map file, import library and PDB file)
    $(LI LDC: add option to link against debug runtime library)
    $(LI LDC: no longer tries to run cv2pdb)
    $(LI LDC: if -mtriple= or -march= is specified as additional option, don't emit -m32 or -m64)
    $(LI built with 2.077 to support new symbol mangling)
  ))
  $(LI dparser:
   $(UL
    $(LI when building with LDC, use import path from its config file instead of DMDs' sc.ini)
    $(LI parse "static foreach" (but no semantic analysis))
    $(LI for syntax errors underline the full token, not only the first character)
  ))
  $(LI mago: fix string display for LDC builds)
  $(LI cv2pdb
   $(UL
    $(LI now also search VS2017 registry entries to find mspdb140.dll)
    $(LI fix working with the VS2017 update 15.3.1)
    $(LI allow converting larger binaries by marking it "large address aware")
    $(LI DWARF: fix crash with AUX data in symbol table)
  ))
  $(LI improve handling of non-ASCII installation paths:
   $(UL
    $(LI use unicode aware version of NSIS, register through wide string API of rundll32)
    $(LI parse sc.ini with current code page)
    $(LI pipedmd: pass wide string command line to sub process)
    $(LI convert MS linker response file to UTF16)
  ))
  $(LI fixed spurious freeze in precise GC (mostly during startup))
  $(LI indentation of lambdas as parameter arguments now aligns statements on tab stops)
  $(LI required OS version for executables restored to 5.01 to support Windows XP)
 )

$(H2 2017-08-17 Version 0.45.1)
 $(UL
  $(LI installation
   $(UL
    $(LI now building against the VC runtime (-m32mscoff) instead of the DigitalMars runtime to avoid
      anti-virus programs blocking the installation or execution)
  ))
  $(LI DParser semantic engine:
   $(UL
    $(LI "add import path of project dependencies": implicit import directories not passed to semantic analyzer)
    $(LI tooltip for selective imports now show the aliased definition, not the alias)
    $(LI improved tooltips: show fully qualified name, show initializer for constants,
      better display for enum and aliases)
    $(LI fixed completion or tooltips sometimes not working before modifying source code)
  ))
  $(LI build system
   $(UL
    $(LI fix dependencies for custom build rules if file names contain spaces)
    $(LI fix tracker invocation if the VS2015 version is found through PATH)
  ))
  $(LI mago debugger:
   $(UL
    $(LI fix displaying long strings as empty)
  ))
  $(LI build
   $(UL
    $(LI update vsi2d to Windows SDK 10.0.15063.0)
    $(LI Visual D now buildable with VS2017)
  ))
 )

$(H2 2017-08-01 Version 0.45.0)
 $(UL
  $(LI installation
   $(UL
    $(LI read default DMD installation path from Visual D or DMD registry key, if not available in VS registry hive)
    $(LI UCRT version detection: ignore directories that do not start with a digit (e.g. from DDK))
    $(LI bugzilla Issue 17384: fix default executable search path for LDC/x64 under VS2017)
  ))
  $(LI editor
   $(UL
    $(LI fix crash when editing dub.json when part of a project)
    $(LI added task list support for files loaded into the editor)
  ))
  $(LI DParser semantic engine:
   $(UL
    $(LI added support for function attributes @nogc and scope, align(expression))
    $(LI cache semantic results until next edit)
    $(LI break endless loop due to unresolved selective import)
    $(LI fix for no expansions for symbols from public import in imported module)
    $(LI try dparser as fallback if goto definition on import fails)
    $(LI fix exception in isExpression)
  ))
  $(LI build system
   $(UL
    $(LI use generic file system tracking instead of compiler switch -deps=)
    $(LI fixed tracker.exe not found in VS2015 and VS2017)
    $(LI new project option "Add import paths of project dependencies")
    $(LI fixed Compile and Run/Debug if building through MS-COFF and not having VS selected in sc.ini)
    $(LI /MAPINFO: remove ancient options no longer supported by the MS linker)
    $(LI separated compile and link into two batches so compile skipped if only link inputs changed)
    $(LI dependency monitoring: added option to specify files/folders to exclude from dependency check)
    $(LI mark html output log as UTF-8 encoded)
  ))
  $(LI mago debugger:
   $(UL
    $(LI fixed memory leaks that could also prohibit compilation due to PDB file still open)
    $(LI add debugger options page to allow hiding internal locals and static members)
    $(LI can now show registers in expressions)
    $(LI show static members and base class with different icons)
    $(LI fixed x64 debugger failing to start)
    $(LI cv2pdb: added support for AA display in mago)
    $(LI fixed loading PDB file when only VS2017 is installed)
  ))
  $(LI cpp2d
   $(UL
    $(LI add missing default to switch())
    $(LI ensure space between identifiers)
    $(LI fix module name for translated C-files)
  ))
 )

$(H2 2017-04-02 Version 0.44.2)
 $(UL
  $(LI fixed building private phobos with recent dmd)
  $(LI fixed freeze during semantic analysis)
  $(LI bugzilla 17254: close and reopen completion box if results added)
  $(LI fix link to build log: replace spaces with %20)
  $(LI added VC project integration for VS2017)
 )

$(H2 2017-03-12 Version 0.44.1)
 $(UL
  $(LI bugzilla 17252: Fixed bad character inserted into the executable search path default)
 )

$(H2 2017-03-12 Version 0.44)
 $(UL
  $(LI installation
   $(UL
    $(LI added preliminary support for VS 2017 RC)
	$(LI new version scheme removing the gratuitious .3 from the Visual D version)
   ))
  $(LI project management
   $(UL
    $(LI added integration with msbuild and VC++ projects)
    $(LI can now read and write Mono-D project files (but likely to be incomplete because this was
      a failed attempt to integrate with msbuild and the VC projects))
    $(LI when linking with MS linker, options for the map file broke the command line)
    $(LI bugzilla 16063: missing option -L/DLL when linking a DLL with MS linker)
    $(LI added $(DOLLAR)(Platform) as a settings macro replacement in addition to $(DOLLAR)(PlatformName))
    $(LI changed default output directory to $(DOLLAR)(PlatformName)/$(DOLLAR)(ConfigurationName))
    $(LI added x64 configurations to project templates)
    $(LI added project template to build with DMD, LDC and GDC for x86 and x64)
    $(LI building a library with LDC now always adds "-oq -od=$(DOLLAR)(IntDir)" to the command line)
   ))
  $(LI mago:
   $(UL
    $(LI bring back support to run on Windows XP)
    $(LI display const modifier on type, recover string types)
    $(LI add and install Concord debug engine plugin for VS 2012-2015)
   ))
  $(LI cv2pdb:
   $(UL
    $(LI fix crashes with very long symbols)
    $(LI can now be enabled independently of debug engine)
   ))
  $(LI language service
   $(UL
    $(LI added automatic brace completion)
    $(LI dparser: semantic analysis no longer times out after 500ms, but cancels previous requests)
    $(LI dparser: improved performance by adding name lookup cache)
    $(LI Improvements to completion lists:
	 $(UL
      $(LI completion box no longer pops up if caret has been moved elsewhere)
      $(LI new option to disable exact start match (searches case insensitive sub string))
      $(LI free functions show different icon than member functions)
      $(LI aliases show other icon than variables)
      $(LI new sorting modes "by type" using classification by the semantic engine,
        "by declaration", effectively using scopes as discovered by the semantic engine)
      $(LI without any match, still keep the completion box open to update when deleting the last character)
      $(LI less flashing when updating the results)
      $(LI code snippets now added to possible expansions)
     ))
   ))
  $(LI build
   $(UL
    $(LI now builds with dmd 2.073)
    $(LI added AppVeyor integration builds)
    $(LI VS SDK 2013 now needed to build Visual D)
   ))
  $(LI miscellaneous
   $(UL
    $(LI dustmite: error messages written to stderr not grepped)
    $(LI menu entries now disabled if they require the focus on a D file, but it is elsewhere)
    $(LI reduced idle processing by only updating the active view)
   ))
 )

$(H2 2015-11-28 Version 0.3.43)
 $(UL
  $(LI installation
   $(UL
    $(LI new install adds $(DOLLAR)(VCInstallDir)\bin to exectuable paths to allow cv2pdb to create PDB files)
    $(LI moved defaults for resource includes and dmd executable paths from installation to extension init)
    $(LI tweaked default path and library settings for DMD and LDC)
  ))
  $(LI improved VS2015 support
   $(UL
    $(LI added detection for Universal CRT in Win10 SDK, new macro replacements $(DOLLAR)(UCRTSdkDir) and
      $(DOLLAR)(UCRTVersion) allow adding library search path to find libucrt.lib)
    $(LI fixed spurious "not implemented" error in error list of VS 2015)
    $(LI fix dark theme detection in VS 2015)
    $(LI fixed calling linker to build with VC runtime of VS2015: legacy_stdio_definitions.lib missing)
    $(LI VS2015 linker updates logs and telemetry data files, confusing tracked linker dependencies.
      Now ignoring files that are both read and written.)
  ))
  $(LI project management
   $(UL
    $(LI New item: the module name no longer has a preceding '.' when guessing a package name)
    $(LI renamed command "Add Folder" in project folder context menu to "Add Filter")
    $(LI added command "Add Folder" to project folder context menu that actually creates the folder on disk)
    $(LI renaming a module in the project tree now reopens it at the previous caret location)
    $(LI renaming a package in the project tree also renames the folder on disk if it is still empty)
    $(LI bugzilla 12021: C++ projects (and others probably, too) might not load correctly in a solution)
      that also contains a Visual D project
  ))
  $(LI build system
   $(UL
    $(LI debug info: added option "suitable for selected debug engine")
    $(LI LDC: recent versions build object files into intermediate folder, wrong names passed to linker
      with "separate compile and link")
    $(LI debug option: allow none of -debug and -release to be specified (and fix LDC never to receive
      the -d-debug option))
    $(LI additional options: now replacing newline with space when adding to the command line)
    $(LI compiling file for syntax check with LDC passed wrong command line option)
    $(LI pass VSINSTALLDIR in the environment to avoid autodetection by LDC)
  ))
  $(LI language service
   $(UL
    $(LI the original semantic analysis engine is no longer installed, always using dparser now)
    $(LI better semantic/colorizer support for versions LDC,CRuntime_Microsoft,CRuntime_DigitalMars and MinGW)
    $(LI bugzilla 15345: syntax highlighting wrong if asm followed by function attributes)
  ))
  $(LI configuration dialogs:
   $(UL
    $(LI fixed small fonts in VS2015)
    $(LI better work with resizeable windows)
    $(LI scale some controls vertically if there is space)
    $(LI added browse buttons to path settings)
  ))
  $(LI some improvements to the C++ to D conversion wizard:
   $(UL
    $(LI don't stop conversion after an unmatched } (this also caused other messages to not be displayed))
    $(LI added support for sizeof without parenthesis)
    $(LI allow namespace scope in type names)
    $(LI allow virtual destructors)
    $(LI skip throw function specification)
    $(LI fix order of identifiers if "#define A B" is converted to an alias)
  ))
  $(LI miscellaneous
   $(UL
    $(LI dustmite: pattern passed to "find" must always use quotes)
    $(LI added icons to some commands)
    $(LI search pane did not save its last state, only when switching between file and symbol search)
    $(LI replaced ancient pkgcmd.ctc with pkgcmd.vsct that's buildable with newer VS SDKs)
  ))
 )

$(H2 2015-8-5 Version 0.3.42)
 $(UL
  $(LI build system
   $(UL
    $(LI added new command "DustMite Build Failure" to reduce source of startup project
         for build error with DustMite)
    $(LI added integration into the Visual Studio Performance Wizard)
    $(LI updated "Build Phobos Browse Info" and "Build local version of phobos" for dmd 2.067+)
    $(LI added project template for console application built with DMD/LDC and x86/x64)
    $(LI release configurations now enable optimizations and inlining by default)
  ))
  $(LI cv2pdb
   $(UL
    $(LI last version introduced crashes with DWARF conversions)
    $(LI now supports info in DWARF sections .debug_frame and .debug_loc for better display of locals)
    $(LI DWARF debug info now stripped from executable)
    $(LI support for mspdb140.dll from VS2015)
    $(LI now writes correct machine type to PDB for x64)
  ))
  $(LI mago
   $(UL
    $(LI mago is now the default debug engine for new projects)
    $(LI added support for new AA implementation in dmd 2.068)
    $(LI preview for structs now shows first members)
  ))
  $(LI demangle D/C++ symbols in disassembly with new tool dcxxfilt that supports both gcc
       and MS C++ mangling.)
  $(LI search file dialog
   $(UL
    $(LI the same file is no longer listed multiple times if it is in several projects)
    $(LI '.', '/' and '\' are considered the same in case insensitive non-regex searches
         to simplify finding a module in a package)
    $(LI case sensitivity button was restored inverted)
  ))
  $(LI installer now shows the version of Visual D about to be installed)
 )

$(H2 2015-5-16 Version 0.3.41)
 $(UL
  $(LI build system
   $(UL
    $(LI new linker option "build and use local phobos library" to get a COFF32 version (dmd 2.067+)
         or add missing debug info (dmd 2.065+))
    $(LI workaround for link response file with spaces, but disabled short names on NTFS volume)
  ))
  $(LI language service
   $(UL
    $(LI dparser updated to cf26dbe426b10957f6364313cc7121e41083bebe with support for new
         language features in dmd 2.067 and fixing a number of exceptions)
    $(LI some initial support for finding symbol references)
    $(LI new command "Compile and Disassemble" to show the disassembly of the current file in
         the code context window that is automatically synchronized with editor movements)
  ))
  $(LI mago debugger
   $(UL
    $(LI module list now shows x64 addresses correctly)
    $(LI verboser output for DLL load/unload)
    $(LI implement "set next statement")
    $(LI callstack: parameter list also showed locals)
    $(LI disassembly: show symbols, address labels)
    $(LI fix dstring display)
    $(LI can list associative array members (needs
         https://github.com/dlang/dmd/pull/4473 for Win64, new AA
         implementation in dmd 2.068 not supported yet, though))
    $(LI show exception number for Win32 exceptions)
    $(LI can now load PDB symbols from Microsoft Symbol Server or local cache folders)
    $(LI now supports lexical scope blocks (helps C++ and D with
         https://github.com/dlang/dmd/pull/2867))
   ))
  $(LI cv2pdb: improvements for DWARF conversion)
  $(LI renaming project configuration did not change respective config on all platforms)
  $(LI profiler window: non-D symbols (e.g. C++ mangled functions) are no longer displayed empty)
 )

$(H2 2015-1-1 Version 0.3.40)
 $(UL
  $(LI build system
   $(UL
     $(LI added basic support to compile C/C++ files:
       $(UL
         $(LI new tool "C/C++" that is also auto-detected for usual file extensions)
         $(LI common command line options can be specified on the compiler page of the project)
         $(LI special command line options can be added per file)
         $(LI $(CC) expands to the compiler executable of the current D compiler: dmc, cl, gcc or clang)
         $(LI if "Translate D options" is checked, dmd options for -g, -release, -O are translated to
              the respective C/C++ compiler option)
       ))
     $(LI Win32/COFF support: check box on Compiler->Output page, new tab in global options)
     $(LI revamped pipedmd: now uses tracker.exe from MSBuild or WinSDK to monitor dependencies)
     $(LI custom file properties: edit, change selection and apply could change new selected file)
     $(LI moved "Other Compiler" option from main project page to compiler page)
     $(LI added additional options to the resource compiler tool)
     $(LI separate link could fail if configuration name contains spaces)
     $(LI bugzilla 13759: $(DOLLAR)(VSINSTALLDIR)\Common7\IDE now added to the default executable paths)
     $(LI DMD/x64 linker override settings not saved)
     $(LI bugzilla 13452: fix file monitoring)
   ))
  $(LI language service
   $(UL
     $(LI really updated dparser to a6207d6db5e54c68aa4b9db53b702681242d81d5)
     $(LI updated version identifiers according to $(LINK http://dlang.org/version.html))
     $(LI goto definition on import now supports package.d)
     $(LI build phobos browse info: operated on outdated folder structure of phobos/druntime)
     $(LI bugzilla 13817: VisualD cannot list members with utf-8 wide characters)
     $(LI bugzilla 13342: mixin error message now interpreted)
     $(LI when running/unittesting from within visuald, exception/callstack locations can be jumped to)
     $(LI bugzilla 13213: there are now both "goto definition" and "goto declaration", where the former
          will try to find the forward declared symbols through the object browser (including C/C++))
     $(LI object browser/symbol search: now filters out __unittest and __invariant symbols)
     $(LI bugzilla 13616: fix freeze when starting completion at the very first line and column of source)
   ))
  $(LI debugger
   $(UL
    $(LI new cv2pdb version 0.33
     $(UL
      $(LI did not run on XP anymore due to bad OS version requirements)
      $(LI better DWARF location support)
     ))
   ))
  $(LI add installation for VS2015)
 )

$(H2 2014-10-10 Version 0.3.39)
 $(UL
  $(LI build system
   $(UL
    $(LI optlink now always called with /DELEXE to avoid keeping broken binary)
    $(LI bugzilla 11035: added workaround for bad import library being passed by C/C++ projects)
    $(LI tweaked "Compile & Run" to distinguish between compile and execution errors)
    $(LI added "Compile & Debug" command)
    $(LI add option "up to date with same time" to custom build)
    $(LI target no longer rebuilt if only custom builds necessary)
    $(LI add options for -vgc, -gx and -allinst)
    $(LI removed checkbox for dmd option -quiet)
    $(LI slightly improved configuration pages by grouping related options)
    $(LI bugzilla 12584: fixed global options disappearing when resizing window)
   ))
  $(LI project management
   $(UL
    $(LI bugzilla 13360: implemented automation object methods "DTE" and "Collection")
   ))
  $(LI language service
   $(UL
    $(LI added editor margin to display coverage counters and percentage)
    $(LI support tab/indentation settings set by .editorconfig plugin)
    $(LI new dparser version: a28aaf67777733b2b70d56fc8cab8b5f296b9745)
    $(LI syntax highlighting: @nogc added as a keyword)
   ))
  $(LI debugger
   $(UL
    $(LI new mago version 1.0
     $(UL
      $(LI now supports debugging x64 executables)
      $(LI displays static members of classes and structs)
      $(LI fixed not closing executable file causing linker to fail when rebuilding)
      $(LI fixed breakpoints not set in all instances of a template)
      $(LI breakpoints no longer span multiple lines)
      $(LI disassembly now shows a maximum of 8 lines of source code before instruction)
     ))
    $(LI new cv2pdb version 0.32
     $(UL
      $(LI DWARF: fixed relocations in .debug_line section)
      $(LI tweaked visualizer macros to display void[], limit array preview to 64 entries)
     ))
   ))
 )

$(H2 2014-04-12 Version 0.3.38)
 $(UL
  $(LI build system
   $(UL
    $(LI added support for string import dependencies (needs dmd 2.065))
    $(LI Windows SDK 8.0/8.1 detection)
    $(LI fix bad "\n" in default x64 library search path)
    $(LI fixed default library path for x64 (contained spaces, but were not quoted, added default for 8.1 SDK))
    $(LI fixed passing quoted library paths to linker)
    $(LI x64 executable and library search path not correctly saved for next VS start)
    $(LI bugzilla 11962: added option to select the C runtime library when compiling for x64)
   ))
  $(LI project management
   $(UL
    $(LI fixed project and completion icons being converted to 16 color bitmaps)
    $(LI add source control support for git in VS2013 (and maybe others))
    $(LI bugzilla 12052: improve project automation to mute NuGet (still empty project pretended))
    $(LI fix DnD of project items in VS2013)
   ))
  $(LI language service
   $(UL
    $(LI completion box now displays appropriate icons and tooltip with dparser)
    $(LI tool tips now expand some Ddoc macros for better readability)
    $(LI bugzilla 11940: completion on import statements no longer showed folder icons)
    $(LI bugzilla 11649: completion on selective import now lists identifiers from imported module)
    $(LI improved integration of Alex Bothe's dparser)
     $(UL
      $(LI updated dparser to 1bb6dc6e0a3069a07d8e7f15070161b717bd94c4)
      $(LI fixed completion for symbols without description)
      $(LI added options to enable/disable mixin analysis and UFCS expansions)
      $(LI added support for multi line completions (including override completion))
      $(LI parameter tool tips now use prototype from dparser and shows documentation)
     )
    $(LI bugzilla 12353: option "Show Type In Tooltip" not saved and restored across restart)
   ))
  $(LI debugger
   $(UL
    $(LI updated to cv2pdb 0.31
     $(UL
      $(LI support mspdb120.dll from VS 2013)
      $(LI bugzilla 11537: improved search for appropriate mspdb*.dll if multiple version of VS installed)
      $(LI fix support for DWARF conversion for gcc 4.8)
      $(LI bugzilla 11898: cv2pdb: modified visualizer for void[] to also show bytes)
     ))
    $(LI updated to mago 0.9
     $(UL
      $(LI bugzilla 11547: remove error message when stopping debugging)
      $(LI bugzilla 11437: debug info rejected if records don't have "recommended" order)
      $(LI bugzilla 11030: set breakpoint in all template instances)
     ))
   ))
  $(LI miscellanea
   $(UL
    $(LI update SDK conversion for VS2013 and Windws SDK 8.1)
    $(LI bugzilla 11786: change some default colors when using dark theme in VS 2012+ (restart required))
    $(LI bugzilla 12187: disguise functionality of pipedmd.exe and filemonitor.dll to let it pass
      most anti-virus checks)
   ))
 )

$(H2 2013-11-02 Version 0.3.37)
 $(UL
  $(LI installer:
   $(UL
    $(LI fixed regression: VS 2010/2012 extension pkgdef files almost empty)
    $(LI now has workaround for x64 debugger of Visual Studio 2012 Shell )
    $(LI installs cv2pdb 0.27 which fixes a crash when converting DWARF from GDC 4.8)
    $(LI installs mago 0.8 with pdb and embedded breakpoints support )
    $(LI installer now picks up dmd2 folder from DMD installation)
    $(LI added support for VS 2013 to installer, removed VS.NET 2003)
   ))
  $(LI "Compile and Run":
   $(UL
    $(LI no longer adds "--main" automatically)
    $(LI removed some other implicite command line options that confused rdmd)
    $(LI fixed quotes in --eval arguments)
    $(LI didn't save file if it is not part of a project in the solution)
   ))
  $(LI syntax/coverage highlighting
   $(UL
    $(LI editor always started with coverage highlighting enabled)
    $(LI Colorize coverage:
     $(UL
      $(LI disabled if lst file older than source file or deleted)
      $(LI tweaked line number translation)
      $(LI now searches for coverage generated files in last execution folders)
      $(LI added new command "Delete Coverage Files")
     ))
    $(LI after changing the "Colored types" the current editor did not update immediately)
    $(LI user type colorizer settings were forgotten after editing options)
    $(LI keywords can now also be colored by adding them to the "Colored types")
   ))
  $(LI DParser
   $(UL
    $(LI updated to $(LINK2 https://github.com/aBothe/D_Parser/commit/72f1bc54f2426954f463f03b215e044174fc1468, recent version))
    $(LI enabled mixin analysis)
    $(LI pass deprecation flag to engine)
    $(LI DParser engine now used by default if installed)
   ))
  $(LI vdserver
   $(UL
    $(LI add __FUNCTION__, __PRETTY_FUNCTION__ and __MODULE__ as keywords and primary expression)
    $(LI add __parameters as specification in is-expression)
   ))
  $(LI build system
   $(UL
    $(LI fixed building with -op and source files on different drive than project)
    $(LI added file options per configuration)
    $(LI fixed invoking bad command when no files to compile, but additional arguments set)
    $(LI added global option to display the reason for building a target)
    $(LI fixed custom build rules executed twice sometimes)
    $(LI fixed sc.ini evaluation, added support for sections [Environment32] and [Environment64] )
    $(LI link dependencies can now also be monitored for the 32-bit MS linker)
    $(LI added VCINSTALLDIR to the list of available macros)
    $(LI added different options for executable and library search paths to be used for Win32/x64)
    $(LI x64: linker settings from sc.ini can be overwritten )
    $(LI x64: linker no longer invoked through dmd)
   ))
  $(LI miscellaneous
   $(UL
    $(LI added command "Open Folder in Windows Explorer" to project and folder context menu)
    $(LI goto definition now falls back to JSON information if semantic analysis yields no result)
    $(LI improved indentation after opening parenthesis to follow next token)
    $(LI added commands "Collapse unittests" and "Collapse disabled" to the outlining menu)
    $(LI dviewhelper.dll from cv2pdb now avoids being unloaded after debugger expression evaluation using visualizers)
   ))
  $(LI changed license to Boost)
 )

$(H2 2013-05-10 $(VDLINK News36,Version 0.3.36))
 $(UL
  $(LI added debug settings to new DMD/GDC project template )
  $(LI regressions caused by switching to installation as VS2010/VS2012 extension:
   $(UL
    $(LI executable path contained untranslated \n)
    $(LI no Visual D colors added)
   )
  )
  $(LI only force separate link if "Monitor OPTLINK dependencies" is enabled)
  $(LI /SUBSYSTEM switches lost when building through optlink directly)
  $(LI added project option "Use of Deprecated Features causes Error" that maps to -de)
  $(LI tweaked parser to support new language features:
   $(UL
    $(LI version(assert))
    $(LI user defined attributes @identifier_opt(arguments) or @identifier)
    $(LI alias id = type)
    $(LI alias this = id)
    $(LI deprecated("message"))
    $(LI added keyword __parameters)
   )
  )
  $(LI tweaked parser to support undocumented language features:
   $(UL
    $(LI ref anywhere in foreach type to support "foreach(const ref x; range)")
    $(LI prefix lambda with function/delegate)
    $(LI added keyword __argTypes)
   )
  )
  $(LI syntax highlighting and semantic now fully support version identifiers according
    to http://dlang.org/version.html )
  $(LI improved parser/semantics:
   $(UL
    $(LI fix "forgetting" type of function parameters after first evaluation)
    $(LI fix a number of crashes during semantics)
    $(LI improved parser recovery after too many closing braces)
   )
  )
  $(LI when cloning a configuration in the configuation manager, debug info settings were lost)
  $(LI compiling a single file now reports success)
  $(LI avoid asking to save project file when closing VS and the project has already been saved)
  $(LI fixed crashes due to bug in precise GC with arrays just below page size)
  $(LI adjusted JSON interpretation for symbol lookup and parameter tooltips to new format in dmd 2.062)
  $(LI some tweaks to C++ to D converter)
  $(LI basic LDC support)
  $(LI added new option pages for DMD/GDC/LDC directories)
  $(LI linker messages from GDC and MS linker can now be demangled aswell)
  $(LI additional command line arguments now placed at the very end to avoid GDC linker troubles)
  $(LI DParser by Alexander Bothe (https://github.com/aBothe/D_Parser) integrated as an alternative
    semantic engine )
  $(LI added command "Compile and Run" to execute current text buffer or selection via rdmd)
  $(LI added command "Open Language Options" for easier access to the settings page)
  $(LI added option "Colorize coverage from .LST file" to highlight lines from code coverage output)
 )

$(H2 2012-12-03 Version 0.3.35)
 $(UL
  $(LI new linker option to disable using global and standard library search paths)
  $(LI add preliminary support for upcoming dmd win64 compiler)
  $(LI add '/' to '\' translation for macro replacements of $(OUTDIR) and $(INTDIR))
  $(LI fixed build variable $(VSINSTALLDIR) (pointed to parent directory of expected dir))
  $(LI added build project to translate sdk to D)
  $(LI adjusted to changes to dependency file in dmd 2.061)
  $(LI fixed Visual Studio sometimes renamed to VisualD in the window title)
  $(LI fixed parser recovery with multiple syntax errors at module scope)
  $(LI project options: added $(Configuration) to expand to the same as $(ConfigurationName) for compatibility with VC++ projects)
  $(LI project config: controls now have style WS_TABSTOP to allow keyboard navigation)
  $(LI goto definition now uses semantic analysis to find declaration)
  $(LI semantic analysis now enabled by default (removed experimental status))
  $(LI semantics: add .ptr property to dynamic array)
  $(LI now installed as an "extension" to VS 2010 and VS 2012)
  $(LI fixed missing output files when a VC project has a project dependency on a D library project)
  $(LI setting "Demangle names in link errors" never saved)
  $(LI fixed macros not expanded in "other compiler" when figuring out what linker to be called directly)
  $(LI now expanding response files in sc.ini or additional compiler options when looking for import or linker directives)
  $(LI added D icon to vdserver.exe)
  $(LI added console application project template with configurations for DMD and GDC for Win32 and x86)
  $(LI fixed spurious crashes due to bug in precise garbage collection)
 )

$(H2 2012-10-12 Version 0.3.34)
 $(UL
  $(LI fix exceptions in NDepend when opening context menu on D project)
  $(LI delete file from project now uses VS environment dialog (avoiding dialog when moving project items))
  $(LI fixed "build phobos browse info" failing for dmd 2.059)
  $(LI dependency on other projects: only output files with known file types are now passed to the dmd/gdc command line)
  $(LI linker error messages can now be decompressed and demangled (thanks to Benjamin Thaut for providing the code))
  $(LI lexer now allows unicode characters from std.uni.isAlpha in identifiers)
  $(LI fix: when building phobos browse info the implicitely added JSON path was not saved to options)
  $(LI fix calling cv2pdb for D1)
  $(LI goto definition: if ".." is used to reference the source file path, it could be opened twice in the editor)
  $(LI new item: package and module name now filled with some guess)
  $(LI optlink now called directly with file monitoring: this allows passing the library path directly (making the DMD_LIB
    patch in sc.ini redundant) and detecting library and source dependencies )
  $(LI parser could not recover from error in module statement, also improved recovery from error in enum declaration)
  $(LI parse errors in modules imported during semantic analysis could cause dramatic troubles)
  $(LI fixed parsing problems with function literal attributes and enumerators)
  $(LI outlining: adding lines before collapsed region could unfold the regions)
  $(LI fix: underlined syntax error could lag behind by a keystroke)
  $(LI tweak completion box:
   $(UL
    $(LI from browse info: template arguments and contraint stripped from symbol now)
    $(LI avoid delayed opening of completion box when typing non-identifier characters)
    $(LI completion box now closed for a lot of navigation and editing commands)
    $(LI improved speed for large symbol lists)
   )
  )
  $(LI status line now cleared after parsing of imports has finished)
  $(LI fix installation for VS2012)
  $(LI now runs on an almost precise garbage collector)
  $(LI DLL project template now has a linker definition file)
 )

$(H2 2012-06-19 Version 0.3.33)
 $(UL
  $(LI debugger project settings now stored in solution options file, not in project file)
  $(LI regression: clean project failed, now deletes files given by wildcard recursively)
  $(LI token replace: fixed freeze when trying to replace no tokens)
  $(LI cv2pdb: new version 0.25 that allows specifying a different pdb file being embedded
    into the binary and supports VS11 )
  $(LI cv2pdb: exposed command line options in the project options)
  $(LI intellisense tool tip now shows enumerator value)
  $(LI moved parser and semantic analysis into another process)
  $(LI GDC: user specified libraries are now appended after the source files to the command
    line to avoid linker problems )
  $(LI improved performance when indenting multiple lines of code)
  $(LI remove project item: now asks whether file on disk should also be removed)
  $(LI parser: added support for linkage specification inside alias)
  $(LI version highlighting now supports the "version(V):" syntax)
  $(LI tweaked vsi2d to also convert the Windows 8 SDK and VS2012 SDK)
  $(LI added wizard to create packages from the new item dialog)
  $(LI improved import statement detection for expansion and goto definition)
 )

$(H2 2012-03-14 Version 0.3.32)
 $(UL
  $(LI new version of cv2pdb with better handling of unicode characters in path names and better
    support for local variables in DWARF debug info )
  $(LI new version of mago with string literal support for associative array keys and easier stepping into main)
  $(LI some changes to reduce memory leaks due to false pointers)
  $(LI fixed parser to disambiguate MixinStatement and MixinExpression)
  $(LI added support for __vector(T) to parser)
  $(LI goto definition: if executed on an import statement, now searching file through import paths)
  $(LI fixed lexer to not treat in_x as an operator followed by an identifier "_x")
  $(LI fixed regression: import expansions only listed folders, no modules)
  $(LI fixed custom command: project would not restore if multiple commands are used)
  $(LI project properties: added output type DLL for easier switching between DMD and GDC)
  $(LI project properties: added subsystem option, use "not set" if you have to specify a specific windows version)
  $(LI fixed underlining syntax errors shows only first error)
  $(LI fixed option "Show expansions when" not saving state "writing an identifier")
  $(LI added icon for disabled project item (tool set to "None"))
  $(LI version highlighting now supports versions DigitalMars/GNU and Win32/Win64)
  $(LI fixed building static lib with GDC and a space in the library file name)
 )

$(H2 2012-03-14 Version 0.3.31)
 $(UL
  $(LI added option to "Intellisense" page to configure trigger of code completion)
  $(LI delay code definition window update until caret at the same position for a second to avoid pauses while
    navigating through the source )
  $(LI added support for building with GDC)
  $(LI added platform support for "x64" (use with GDC only))
  $(LI includes new version 0.23 of cv2pdb that now also converts DWARF to pdb)
  $(LI tweaked idl2d to convert files to build with dmd 2.058)
  $(LI new version of mago:
   $(UL
    $(LI fixed possible stall when starting debugging)
    $(LI support for associative arrays in expressions)
    $(LI fixed problem with loading debug info of large projects)
   )
  )
  $(LI property: fixed editing multiple configurations at once)
  $(LI added Compile command to syntax check the current source file)
  $(LI parser now supports new delegate syntax (x) => x)
  $(LI project config: shown command line now updated when pressing "Apply")
  $(LI fix resource include with spaces)
  $(LI fix always rebuilding if a dependent library project target has spaces in the path name)
 )

$(H2 2012-01-07 Version 0.3.30)
 $(UL
  $(LI fixed utf8 to OLE string conversion, that could get in the way when using non ascii file names)
  $(LI property pages now adjust their font and size to the IDE environment)
  $(LI __ctfe is now highlighted as a keyword)
  $(LI scope(identifier) with wrong identifier shown as a parse error)
  $(LI completion automatically inserts now if there is only one candidate)
  $(LI completion of import modules now restricted to files, not symbols)
  $(LI colorizer now asks the parser whether "is" and "in" are used as operators)
  $(LI debugger data tooltip now grabs ident1.ident2 expressions when hovering ident2)
  $(LI added checkbox for options -gs and -property to project configuration)
  $(LI added new color to highlight predefined versions)
  $(LI creating new folder now initiates renaming it)
  $(LI fixed error message capture for error list in case the message also contains "filename(lineno):")
  $(LI new options page "Tools->Options->Text Editor->D->Intellisense" to select sources of code completion)
  $(LI experimental tooltips and code completion from semantic analysis of source code)
  $(LI project configuration: new debugger option to redirect stdout to the debugger output window)
  $(LI project configuration: new option to pause after running program without debugger)
  $(LI added option to "Tools->Options->Projects and Solutions->Visual D Settings" to stop a solution build
    if a project fails to build )
 )

$(H2 2011-12-03 Version 0.3.29)
 $(UL
  $(LI highlighting: new colors for user defined list of types (defaults to basic types in object.d))
  $(LI disabled versions: fixed wrong highlighting when editing before conditional)
  $(LI token replace dialog: fixed empty dialog when opening with default size)
  $(LI fixed crash when building a project with a configuration that is not available in a dependent project)
  $(LI fixed freeze in startup due to thread starting issues (probably only happened with more than 2 cores))
  $(LI added C++ to D conversion wizard)
  $(LI added installation for Visual Studio 11)
  $(LI tweaked dialogs to better integrate with VS)
 )

$(H2 2011-10-25 Version 0.3.28)
 $(UL
  $(LI mago debugger: fixed crash when there is no sstStaticSym section in the debug info)
  $(LI mago debugger: fixed local variables not shown in last function of an object file)
  $(LI mago debugger: fixed display of TLS variables)
  $(LI mago debugger: added workaround for bad line number debug info, causing mago to switch to assembly easily)
  $(LI mago debugger: globals and statics can now be displayed without specifying complete scope)
  $(LI cv2pdb: fixed patching of autoexp.dat when the install path contained spaces)
  $(LI fix: the import path set in the global options never made it to the command line)
  $(LI fixed parser to accept "class B() if(true) : A {}")
  $(LI fixed parser to support import as statement)
  $(LI building druntime browse info now uses src folder (di files look ugly and do not compile))
  $(LI building browse info now writes to "Visual D" output pane)
  $(LI F1 searches language and phobos documentation for help on identifier)
  $(LI added highlighting of asm block, using new colors "Visual D Register/Mnemonic" and "Disabled/Token String" variants)
  $(LI parsing and outlining now aborted when text changes, so editing is more responsive with large source files)
 )

$(H2 2011-09-24 Version 0.3.27)
 $(UL
  $(LI smart reindenting line when typing last char of sole "in", "out" and "body")
  $(LI tweaked smart indenting with respect to enumerators, arrays, labels and more)
  $(LI paste a full line or more now causes automatic reindentation (global option to disable))
  $(LI automatic reindentation was not triggered when typing '{', '}', etc (win 7/8 only?))
  $(LI fix: build phobos browse information broken in last version)
  $(LI some internal errors are now reported to the output window (like failing to parse JSON file))
  $(LI fixed bad display when deleting characters from line with outlining)
  $(LI new option to show demangled symbols in the Error List (not the output window))
 )

$(H2 2011-08-25 Version 0.3.26)
 $(UL
  $(LI fixed regression in last version: single file compilation did not build any d files)
  $(LI single file compilation: avoid relinking every time)
  $(LI seperate compile and link: no longer trashes dependencies in link step)
  $(LI goto definition, search symbol: now line number adjusted according to changes since last successful build)
  $(LI fix: resource files in sub folders would not build because the same folders were expected in the intermediate directory)
  $(LI global settings: split page into directories/settings pages to make option "Show build time" accessible)
  $(LI global settings: added option to disable sorting projects)
  $(LI parser now accepts "do {} while(cond)" without trailing ';')
  $(LI project options macro $(PROJECTNAME) now uses the name in the solution instead of the project file name)
  $(LI fixed bad indentation of first contract)
  $(LI fixed colorization of first token after debug condition without arguments)
  $(LI "is" now always colored as operator, not as keyword)
  $(LI updated to build with dmd 2.055beta)
 )

$(H2 2011-06-19 Version 0.3.25)
 $(UL
  $(LI fixed version information of the DLL)
  $(LI error list: warnings are no longer shown as errors)
  $(LI project name added to buildlog.html to allow multiple projects with the same intermediate dir)
  $(LI fixed highlighting of version(unittest) and debug without identifier)
  $(LI friendlier error message if debug executable or working dir do not exist)
  $(LI reduced parsing thread priority to interfere less with editing)
  $(LI adjusted vsi2d to build with the latest VS2010 SDK)
  $(LI Visual D now builds with DMD 2.053)
  $(LI moved from std.date to std.datetime to fix some time displays)
  $(LI moved outlining into parse thread to reduce delays when editing large files)
  $(LI added warning to library search path settings)
  $(LI d-files now set to UTF8 encoding if not already marked by BOM)
  $(LI fixed transparent window frame around dialogs in VS2010)
  $(LI added drag'n'drop of project folders)
  $(LI added support for "Stop Outlining" and "Toggle All Outlining")
  $(LI tweaked outlining for multi-dimensional arrays and token strings)
  $(LI build order of custom/resource compilations now sorted by dependencies)
  $(LI project items now sorted alphabetically)
  $(LI fixed a few more issues with relative paths causing a source file to be opened twice in the editor)
 )

$(H2 2011-05-08 Version 0.3.24)
 $(UL
  $(LI fixed crash when installing/uninstalling other Visual Studio plugins)
  $(LI added menu entry "Open Website" to browse the visual D Website inside Visual Studio)
  $(LI added support for Object Browser and Class View)
  $(LI now runs a parser in the background to underline syntax errors)
  $(LI fixed scanning of floating point literals starting with '.')
  $(LI default colors for identifiers, numbers and operators now follow the "Plain Text" setting)
  $(LI new version 0.1.2 of mago that fixes some issues with exceptions and improves the call stack display)
  $(LI if a source file is used in multiple project, it is no longer opened multiple times in the editor)
  $(LI improved lookup speed in browse info, now removing duplicate entries for eponymous templates)
  $(LI fixed issues with quoted arguments with trailing backslash in settings)
  $(LI browse info now updated when JSON paths changed in global options)
  $(LI fixed spurious crash when removing multiple lines )
 )

$(H2 2011-03-09 Version 0.3.23)
 $(UL
  $(LI fixed issue on x64 with threads without TLS that crept back in by migrating to DMD 2.052)
  $(LI separate compile and link: removed -X,-D,-H from the link step to avoid creating empty files)
  $(LI new compilation mode: compile only to set your link step manually in the post-build step)
  $(LI jumping to errors in files that exist in several projects now jump to the correct source)
 )

$(H2 2011-02-27 Version 0.3.22)
 $(UL
  $(LI Visual D now builds with DMD 2.052)
  $(LI fixed WindowsApp template to build with DMD 2.052)
  $(LI fixed some COM leaks)
  $(LI paste ring menu no longer stops when repeating the first entry and
    avoids duplicate entries )
  $(LI new token search and replace dialog)
  $(LI new compilation mode: compile and link in separate steps allowing multiple object files)
  $(LI the option "Statement completion -> Parameter information" is now respected,)
    showing the parameter tooltip when writing the opening parenthesis
  $(LI smart-indent now respects the contents of the new line when inserting a line break)
  $(LI now supporting the Code Definition Window)
 )

$(H2 2011-01-29 Version 0.3.21)
 $(UL
  $(LI fix: identifiers extracted for "Goto Definition" stopped at digits)
  $(LI fix: clean removed ddoc files from the doc directory, but not html files)
  $(LI added macro expansion to modules.ddoc setting)
  $(LI added context menu to show paste ring buffer and insert from it)
  $(LI brace highlighting now done in idle handling, so it also works when moving
    the caret with the mouse )
  $(LI brace matching now also includes strings and nested comments)
  $(LI goto matching brace now implemented (the VS implementation does not work
    well with D) )
  $(LI completion: items are no longer displayed multiple times)
  $(LI improved handling of unicode characters in environment and batch files)
  $(LI installer now adds a "D Exception" to the "Win32 Exception" list to allow)
    the debugger to stop when a D exception is thrown
 )

$(H2 2010-12-31 Version 0.3.20)
 $(UL
  $(LI basic outlining support (disable with check box on global text editor page
    if it is causing trouble, manually activate it with "Outlining -> Collapse to Definitions") )
  $(LI added build time output (set check box on global project option page))
  $(LI fixed missing newline after post build command)
  $(LI fix: suffix L was not recognized on floats)
  $(LI code completion and goto definition now also work in comments or strings)
  $(LI ddoc files in project now also passed to DMD automatically)
  $(LI support for generating modules.ddoc for CanDyDOC)
 )

$(H2 2010-12-11 Version 0.3.19)
 $(UL
  $(LI fixed [] being a single token confusing brace matching)
  $(LI fixed some issues with detecting floating point numbers)
  $(LI fixed issues with bad colorization state)
  $(LI fixed crash when a project in a solution could no longer be found)
  $(LI now packaged with cv2pdb 0.19)
 )

$(H2 2010-11-07 Version 0.3.18)
 $(UL
  $(LI linker errors with file name on the same line did not make it into the error list)
  $(LI added color "Visual D Operator" to "Fonts and Colors" setup)
  $(LI added version/debug colorizations (colors "Visual D Disabled ..."))
  $(LI added q{} token string colorizations (colors "Visual D Token String ..."))
  $(LI additional tools settings page under TextEditor->D->Colorizer)
  $(LI fixed broken search file dialog introduced in last version)
  $(LI project configuration: added single file compilation option)
  $(LI project configuration: changed defaults for "file to clean" and "json path"
    to better support single file compilation )
  $(LI fixed incomplete parsing of escaped file names in dependency files)
  $(LI improved dependency file parsing speed)
  $(LI bugfix: imports with selective import symbols could miss from dependent import files)
  $(LI now packaged with cv2pdb 0.18)
  $(LI now packaged with new mago version, including better exception handling and
    disassembly support )
  $(LI fixed mago deinstallation, added mago to Visual Studio About window)
  $(LI added token identifier enumerator to lexer)
 )

$(H2 2010-09-29 Version 0.3.17)
 $(UL
  $(LI improved support for mercurial-scc, AnkhSVN and VisualHG)
  $(LI (un)comment/format selection did not work with selection created from bottom to top)
  $(LI (un)comment selection now works similer to C++ always adding/removing comments, toggle
    comments is now a new Visual D command )
  $(LI fixed DLL loading on xp64)
  $(LI command "Build phobos browse info" now uses $(APPDATA)\VisualD\json as the default path
    to avoid access rights problems )
  $(LI command "Build phobos browse info" now also works for D1)
 )

$(H2 2010-09-24 Version 0.3.16)
 $(UL
  $(LI now Visual D itself also compiles against VSI SDK for Visual Studio 2010 and Windows SDK v7.1)
  $(LI empty dependency file now causes rebuild)
  $(LI new command "Build phobos browse info")
  $(LI added support for Mago debugger)
  $(LI fixed dmd option for profiling)
  $(LI fixed bad status message for matching parenthesis)
  $(LI now supports command comment/uncomment selected lines)
  $(LI improved smart indentation)
  $(LI block re-indentation now works as a single command with respect to undo/redo)
  $(LI now packaged with cv2pdb 0.17)
  $(LI fixed loading DLLs (including Visual D) on Windows Server 2003)
  $(LI now installer includes Mago debugger)
  $(LI new profiler window to display trace.log)
  $(LI fixed bad variable replacement when building project name shorter than 4 characters)
 )

$(H2 2010-08-11 Version 0.3.15)
 $(UL
  $(LI when reading import paths from sc.ini, the directory is determined by searching dmd.exe
    through the executable paths setting and the PATH environment variable )
  $(LI fixed freeze when searching indentation level for smart indent (might also affect brace
    matching) )
  $(LI now packaged with cv2pdb 0.16.)
  $(LI fixed crash when running along-side the Qt-Addin for Visual Studio)
 )

$(H2 2010-07-23 Version 0.3.14)
 $(UL
  $(LI fixed parameter tooltips on VS2010)
  $(LI fixed debugger data tooltips on VS2010)
  $(LI fixed handling of quoted file/path names)
  $(LI updated bitmaps in about box and templates to the website logo)
  $(LI added command VisualD.ParameterInfo to avoid hook by Visual Assist)
  $(LI fixed import completion for packages accessed through project import path settings)
  $(LI goto definition now displays error in status line if no definition found or opening source file fails)
  $(LI now jumping to definition if multiple definitions exist on the same line)
  $(LI brace highlighting now shows error in status line for mismatched brackets)
  $(LI brace highlighting now also shows begin/end of block comments)
  $(LI fixed pasting html text not omitting format information)
  $(LI now using environment variable DMD_LIB to pass library path to DMD, please update DMDs sc.ini accordingly)
  $(LI now build checks whether output files are actually created to avoid silent link failure)
  $(LI generating JSON output is now the default setting for new projects)
 )

$(H2 2010-07-09 Version 0.3.13)
 $(UL
  $(LI renaming a file in the project did not ensure the project to be saved)
  $(LI dragging a directory into the project now creates a folder and adds all files and folders found in that directory but those that start with ".")
  $(LI added project option "Enable informational warnings" (dmd option -wi))
  $(LI resource files now have command "View Code")
  $(LI fix: completion did not detect beginning of word at line end)
  $(LI fix: skipping through a string literal with ctrl-left/right skipped the whole string)
  $(LI now handling some optional project properties to keep AnkhSvn happy.)
  $(LI SCC status of project items is now shown (but not updated yet))
  $(LI minor tweak of the ConsoleApp template)
  $(LI more files translated from the Windows SDK)
  $(LI now using label "reportError" instead of "xit" in build batches)
  $(LI options with multiple arguments are now delimited by both ';' and white spaces, use quotes if any of these need to be part of a file name)
 )

$(H2 2010-06-25 Version 0.3.12)
 $(UL
  $(LI stricter string handling to avoid crashes when launching debugger in VS2010)
  $(LI the windows application template's sub-system version now defaults to 4.0)
  $(LI added new project item template for package creating both folder in project and
    directory on disk )
  $(LI if a directory exists with the name of the folder, the default location
    of a new project item now defaults to this directory )
  $(LI renaming a file in the project renames it on disk as well)
  $(LI improved build process, it should now be possible to compile Visual D following
    the instruction of $(LINK2 BuildFromSource.html, Building from Source) )
  $(LI updated to cv2pdb 0.14.)
 )

$(H2 2010-06-10 Version 0.3.11)
 $(UL
  $(LI error messages now forwarded to error list)
  $(LI Visual D settings now stored in the user area of the registry)
  $(LI added library search path to project settings (you need to append ";%LIB%" to
    the LIB setting in DMD's sc.ini for this to work) )
  $(LI command VisualD.ShowScope now displays the scope of the caret in the
    status line )
  $(LI Visual D now creates its own menu, expecting to be filled with more commands
    in the future and to avoid cluttering other menus )
  $(LI Search window commands are now called VisualD.SearchFile and VisualD.SearchSymbol
    (you might need to reassign keyboard shortcuts) )
  $(LI Thanks to Alix Pexton, the web site has a professional looking new logo.)
 )

$(H2 2010-06-03 Version 0.3.10)
 $(UL
  $(LI updated to cv2pdb 0.13 which allows debugging under plain VS2010 and is
    more stable when evaluating arrays in the debugger )
  $(LI now built with debug symbols to allow crash analysis. See
    [download:downloads/visuald_pdb.zip] for symbols for the latest version)
  $(LI fix: project property dialog did not popup with saved D version)
  $(LI added the possibility to stop a build)
  $(LI new logo now used in about box)
 )

$(H2 2010-05-28 Version 0.3.9)
 $(UL
  $(LI new file/symbol search window)
  $(LI word-completion can now be expanded to symbol lookup by pressing Ctrl-Space again)
  $(LI installation now reenables package, in case you told VS to skip loading it)
  $(LI now using machine-translated SDK instead of std.windows)
  $(LI fixed COM leak)
  $(LI fix: file opened through "goto definition"/"find in files" sometimes warns
    "already opened in editor")
  $(LI fix: "goto error" sometimes would not jump to error with message
    "cannot find the file specified")
  $(LI fix: last version would not let you select any but the first entry of an
    expansion list)
  $(LI symbol information now updated after project load, it's no longer necessary
    to build once)
 )

$(H2 2010-05-08 Version 0.3.8)
 $(UL
  $(LI added function parameter tooltips)
  $(LI fix: resource files would not be updated when used with tool "Auto")
  $(LI fix: custom built files always added to linker command line)
  $(LI fix: fixed initialization exception when no windows-SDK installed)
  $(LI fix: build only worked as admin on x64)
  $(LI fix: spurious crashes on x64)
  $(LI improved WindowsApp project template (added libs, sets application subsystem))
 )

$(H2 2010-04-27 Version 0.3.7)
 $(UL
  $(LI force CR/LF pairs in batch commands instead of LF only end-of-line.)
 )

$(H2 2010-04-26 Version 0.3.6)
 $(UL
  $(LI fixed COM and memory leaks)
  $(LI projects with a lot of files now build with response files)
  $(LI when only removing file or changing folder name, project was not saved)
  $(LI support for operation "Rebuild")
  $(LI option "other compiler" and map file were not quoted when containing spaces)
  $(LI added build logging to $(IntDir)\buildlog.html)
  $(LI added macros SAFEPROJECTPATH/DIR/FILENAME/EXT/NAME identical to PROJECT*, but
    without spaces)
 )

$(H2 2010-04-22 Version 0.3.5)
 $(UL
  $(LI added cv2pdb to installer)
  $(LI support for operations on multiselection in solution explorer)
  $(LI added option "D 2.043" to pass corresponding flag to cv2pdb)
  $(LI macros in all debug options are now expanded)
  $(LI fixed crashes on COM objects that were garbage-collected while still in use)
 )

$(H2 2010-04-20 Version 0.3.4)
 $(UL
  $(LI added support for command Edit.InvokeSnippetFromShortcut)
  $(LI installer now requests admin execution level, so it does not fail on Vista or Windows7)
  $(LI removed VS Express version from installer)
 )

$(H2 2010-04-18 Version 0.3.3)
 $(UL
  $(LI now shows full version in about box)
  $(LI added README, LICENSE and CHANGES to installer)
  $(LI added DnD inside project)
  $(LI fixed registration of D templates for "New File")
  $(LI fixed multi-hreading issue, e.g. causing find in entire solution to fail)
  $(LI added "Clean" project)
  $(LI cleaned up and added more project templates )
 )

$(H2 2010-04-14 Version 0.3.2)
 $(UL
  $(LI added switch "use other compiler" to project settings)
  $(LI disabled settings if respective enable switch is off)
 )

$(H2 2010-04-13 Version 0.3.1)
 $(UL
  $(LI initial release)
 )

Macros:
	TITLE = Version History

